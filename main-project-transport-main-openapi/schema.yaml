openapi: 3.0.0
info:
  description: EasyStory API
  version: "0.0.1"
  title: EasyStory API
tags:
  - name: public
    description: Public EasyStory API
paths:
  /blocks:
    get:
      tags:
        - public
      summary: get blocks list
      operationId: getBlocks
      description: Get blocks
      responses:
        200:
          description: List of blocks
          content:
            application/json:
              schema:
                $ref: '#components/schemas/BlocksList'
  /blocks/{author-name-of-original-block}/{title}:
    get:
      tags:
        - public
      summary: get particular block
      operationId: getBlock
      description: get particular block
      responses:
        200:
          description: Current block
          content:
            application/json:
              schema:
                $ref: '#components/schemas/BlockCurrent'
  /blocks/send:
    post:
      tags:
        - private
      summary: add new block
      operationId: addBlock
      description: adding block by author to DB
      requestBody:
        description: author title and content
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/BlockToAdd'
      responses:
        200:
          description: post block
          content:
            application/json:
              schema:
                $ref: '#components/schemas/BlockAddedResponse'


components:
  schemas:

    BlockAddedResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: '346e02c6-d5c4-4f6b-94d9-5a718e42d0ca'
        errors:
          type: array
          items:
            type: string


    BlockToAdd:
      type: object
      properties:
        title:
          type: string
          example: 'FairyTail'
        author:
          type: string
          example: 'Ivan Petrov'
        content:
          type: string
          description: Content full from WYSIWYG
          example: '<p>Lorem <strong>ipsum</strong><p>'

    BlockCurrent:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: '346e02c6-d5c4-4f6b-94d9-5a718e42d0ca'
        title:
          type: string
          example: 'FairyTail'
        author:
          type: string
          example: 'Ivan Petrov'
        dates:
          $ref: '#components/schemas/Date'
        content:
          type: string
          description: Content full from WYSIWYG
          example: '<p>Lorem <strong>ipsum</strong><p>'
        descendants:
          type: array
          items:
            $ref: '#components/schemas/Block'


    Block:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: '346e02c6-d5c4-4f6b-94d9-5a718e42d0ca'
        title:
          type: string
          example: 'FairyTail'
        author:
          type: string
          example: 'Ivan Petrov'
        dates:
          $ref: '#components/schemas/Date'
        contentPreview:
          type: string
          description: Content preview from WYSIWYG
          example: '<p>Lorem <strong>ipsum</strong><p> ...'

    Date:
      type: object
      properties:
        created:
          type: string
          format: date-time
          example: '2021-01-30T08:30:00Z'
        updated:
          type: string
          format: date-time
          example: '2021-01-30T08:30:00Z'

    BlocksList:
      type: array
      items:
        $ref: '#components/schemas/Block'